logging:
  level:
    root: ERROR
    org:
      springframework: INFO
    com:
      knsr:
        ingestion: INFO

server:
  port: 8080

spring:
  application:
    name: data-ingestion

  # ✅ Enable below datasource and Hikari sections
  # ✅ If you want to use Spring Boot's built-in spring.datasource and HikariCP auto-configuration (instead of a custom DataSource bean)HikariCP connection pool settings (Spring Boot uses HikariCP by default)
#  datasource:
#    url: jdbc:postgresql://localhost:5432/water_management_db
#    username: postgres
#    password: pgdb1234
#    driver-class-name: org.postgresql.Driver
#   # ✅ HikariCP connection pool settings (Spring Boot uses HikariCP by default)
#    hikari:
#      maximum-pool-size: 10
#      minimum-idle: 5
#      connection-timeout: 30000
#      idle-timeout: 600000
#      max-lifetime: 1800000

  # ✅ Hibernate settings are configured under spring.jpa for JPA integration and entity management
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

# ✅ Custom DB properties used by your DbProperties class and custom DataSource bean
db:
  url: jdbc:postgresql://localhost:5432/water_management_db
  username: postgres
  password: pgdb1234
  driver-class-name: org.postgresql.Driver
  # HikariCP connection pool settings
  max-pool-size: 10              # maps to HikariConfig.setMaximumPoolSize
  min-pool-size: 5               # maps to HikariConfig.setMinimumIdle
  connection-timeout: 30000      # maps to HikariConfig.setConnectionTimeout
  max-wait-time: 30000           # optional, can be mapped to validationTimeout or ignored
#  idle-timeout: 600000           # optional, maps to HikariConfig.setIdleTimeout
#  max-lifetime: 1800000          # optional, maps to HikariConfig.setMaxLifetime

